openapi: 3.0.3
info:
  title: CitizenVoice APIs
  version: 3.1.1
  description: Documentation of API endpoints in CitizenVoice
paths:
  /api/auth/google/:
    post:
      operationId: api_auth_google_create
      description: |-
        class used for social authentications
        example usage for facebook with access_token
        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
        -------------

        example usage for facebook with code

        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter
        from allauth.socialaccount.providers.oauth2.client import OAuth2Client

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
            client_class = OAuth2Client
            callback_url = 'localhost:8000'
        -------------
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
  /api/auth/login/:
    post:
      operationId: api_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
  /api/auth/logout/:
    post:
      operationId: api_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/register/:
    post:
      operationId: api_auth_register_create
      description: |-
        Registers a new user.

        Accepts the following POST parameters: username, email, password1, password2.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
  /api/auth/token/refresh/:
    post:
      operationId: api_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/token/verify/:
    post:
      operationId: api_auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/auth/user/:
    get:
      operationId: api_auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    put:
      operationId: api_auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    patch:
      operationId: api_auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
  /civilian/v1/answers/:
    get:
      operationId: civilian_v1_answers_list
      description: A ViewSet that returns GeoJSON data for the answers.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - civilian
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDashboardAnswerList'
          description: ''
  /civilian/v1/answers/{id}/:
    get:
      operationId: civilian_v1_answers_retrieve
      description: A ViewSet that returns GeoJSON data for the answers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - civilian
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardAnswer'
          description: ''
  /civilian/v1/schema/:
    get:
      operationId: civilian_v1_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - civilian
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /voice/v3/answers/:
    get:
      operationId: voice_v3_answers_list
      description: Answer ViewSet used internally to query data from database.
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer'
          description: ''
    post:
      operationId: voice_v3_answers_create
      description: Override create to handle both regular and image uploads.
      tags:
      - voice
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
  /voice/v3/answers/{id}/:
    get:
      operationId: voice_v3_answers_retrieve
      description: Answer ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    put:
      operationId: voice_v3_answers_update
      description: Answer ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - voice
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    patch:
      operationId: voice_v3_answers_partial_update
      description: Answer ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - voice
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    delete:
      operationId: voice_v3_answers_destroy
      description: Answer ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /voice/v3/answers/csv/:
    get:
      operationId: voice_v3_answers_csv_retrieve
      description: Answer ViewSet used internally to query data from database.
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
  /voice/v3/answers/upload_image_answer/:
    post:
      operationId: voice_v3_answers_upload_image_answer_create
      description: Handle image upload for answers.
      tags:
      - voice
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
  /voice/v3/csrf/:
    get:
      operationId: voice_v3_csrf_retrieve
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /voice/v3/linefeatures/:
    get:
      operationId: voice_v3_linefeatures_list
      description: LineStringLocation ViewSet used internally to query data from database
        for all users.
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineFeatureList'
          description: ''
    post:
      operationId: voice_v3_linefeatures_create
      description: LineStringLocation ViewSet used internally to query data from database
        for all users.
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LineFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LineFeature'
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineFeature'
          description: ''
  /voice/v3/linefeatures/{id}/:
    get:
      operationId: voice_v3_linefeatures_retrieve
      description: LineStringLocation ViewSet used internally to query data from database
        for all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this line feature.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineFeature'
          description: ''
    put:
      operationId: voice_v3_linefeatures_update
      description: LineStringLocation ViewSet used internally to query data from database
        for all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this line feature.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LineFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LineFeature'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineFeature'
          description: ''
    patch:
      operationId: voice_v3_linefeatures_partial_update
      description: LineStringLocation ViewSet used internally to query data from database
        for all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this line feature.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLineFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLineFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLineFeature'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineFeature'
          description: ''
    delete:
      operationId: voice_v3_linefeatures_destroy
      description: LineStringLocation ViewSet used internally to query data from database
        for all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this line feature.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /voice/v3/locations/:
    get:
      operationId: voice_v3_locations_list
      description: Location ViewSet used internally to query data from database for
        all users.
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationCollection'
          description: ''
    post:
      operationId: voice_v3_locations_create
      description: Location ViewSet used internally to query data from database for
        all users.
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LocationCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LocationCollection'
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationCollection'
          description: ''
  /voice/v3/locations/{id}/:
    get:
      operationId: voice_v3_locations_retrieve
      description: Location ViewSet used internally to query data from database for
        all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this location collection.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationCollection'
          description: ''
    put:
      operationId: voice_v3_locations_update
      description: Location ViewSet used internally to query data from database for
        all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this location collection.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LocationCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LocationCollection'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationCollection'
          description: ''
    patch:
      operationId: voice_v3_locations_partial_update
      description: Location ViewSet used internally to query data from database for
        all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this location collection.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLocationCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLocationCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLocationCollection'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationCollection'
          description: ''
    delete:
      operationId: voice_v3_locations_destroy
      description: Location ViewSet used internally to query data from database for
        all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this location collection.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /voice/v3/locations/{id}/features/:
    get:
      operationId: voice_v3_locations_features_retrieve
      description: Location ViewSet used internally to query data from database for
        all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this location collection.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationCollection'
          description: ''
  /voice/v3/map-views/:
    get:
      operationId: voice_v3_map_views_list
      description: Question ViewSet used internally to query data from database.
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MapView'
          description: ''
    post:
      operationId: voice_v3_map_views_create
      description: Question ViewSet used internally to query data from database.
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapView'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MapView'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MapView'
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapView'
          description: ''
  /voice/v3/map-views/{id}/:
    get:
      operationId: voice_v3_map_views_retrieve
      description: Question ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map view.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapView'
          description: ''
    put:
      operationId: voice_v3_map_views_update
      description: Question ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map view.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapView'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MapView'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MapView'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapView'
          description: ''
    patch:
      operationId: voice_v3_map_views_partial_update
      description: Question ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map view.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMapView'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMapView'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMapView'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapView'
          description: ''
    delete:
      operationId: voice_v3_map_views_destroy
      description: Question ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map view.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /voice/v3/map-views/id_names/:
    get:
      operationId: voice_v3_map_views_id_names_retrieve
      description: Question ViewSet used internally to query data from database.
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapView'
          description: ''
  /voice/v3/pointfeatures/:
    get:
      operationId: voice_v3_pointfeatures_list
      description: PointLocation ViewSet used internally to query data from database
        for all users.
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointFeatureList'
          description: ''
    post:
      operationId: voice_v3_pointfeatures_create
      description: PointLocation ViewSet used internally to query data from database
        for all users.
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PointFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PointFeature'
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointFeature'
          description: ''
  /voice/v3/pointfeatures/{id}/:
    get:
      operationId: voice_v3_pointfeatures_retrieve
      description: PointLocation ViewSet used internally to query data from database
        for all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this point feature.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointFeature'
          description: ''
    put:
      operationId: voice_v3_pointfeatures_update
      description: PointLocation ViewSet used internally to query data from database
        for all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this point feature.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PointFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PointFeature'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointFeature'
          description: ''
    patch:
      operationId: voice_v3_pointfeatures_partial_update
      description: PointLocation ViewSet used internally to query data from database
        for all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this point feature.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPointFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPointFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPointFeature'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointFeature'
          description: ''
    delete:
      operationId: voice_v3_pointfeatures_destroy
      description: PointLocation ViewSet used internally to query data from database
        for all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this point feature.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /voice/v3/polygonfeatures/:
    get:
      operationId: voice_v3_polygonfeatures_list
      description: PolygonFeature ViewSet used internally to query data from database
        for all users.
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolygonFeatureList'
          description: ''
    post:
      operationId: voice_v3_polygonfeatures_create
      description: PolygonFeature ViewSet used internally to query data from database
        for all users.
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolygonFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PolygonFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PolygonFeature'
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolygonFeature'
          description: ''
  /voice/v3/polygonfeatures/{id}/:
    get:
      operationId: voice_v3_polygonfeatures_retrieve
      description: PolygonFeature ViewSet used internally to query data from database
        for all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this polygon feature.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolygonFeature'
          description: ''
    put:
      operationId: voice_v3_polygonfeatures_update
      description: PolygonFeature ViewSet used internally to query data from database
        for all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this polygon feature.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolygonFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PolygonFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PolygonFeature'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolygonFeature'
          description: ''
    patch:
      operationId: voice_v3_polygonfeatures_partial_update
      description: PolygonFeature ViewSet used internally to query data from database
        for all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this polygon feature.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPolygonFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPolygonFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPolygonFeature'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolygonFeature'
          description: ''
    delete:
      operationId: voice_v3_polygonfeatures_destroy
      description: PolygonFeature ViewSet used internally to query data from database
        for all users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this polygon feature.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /voice/v3/questions/:
    get:
      operationId: voice_v3_questions_list
      description: |-
        Question ViewSet used to query data from database.
        The `create` method is overwritten to accept one data object or an array of objects.
      tags:
      - voice
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
          description: ''
    post:
      operationId: voice_v3_questions_create
      description: Here we are overwriting the default create method from the Django
        REST framework to update or create Questions by list or by single instances
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /voice/v3/questions/{id}/:
    get:
      operationId: voice_v3_questions_retrieve
      description: |-
        Question ViewSet used to query data from database.
        The `create` method is overwritten to accept one data object or an array of objects.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    put:
      operationId: voice_v3_questions_update
      description: |-
        Question ViewSet used to query data from database.
        The `create` method is overwritten to accept one data object or an array of objects.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    patch:
      operationId: voice_v3_questions_partial_update
      description: |-
        Question ViewSet used to query data from database.
        The `create` method is overwritten to accept one data object or an array of objects.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    delete:
      operationId: voice_v3_questions_destroy
      description: |-
        Question ViewSet used to query data from database.
        The `create` method is overwritten to accept one data object or an array of objects.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /voice/v3/questions/{id}/ordered_questions/:
    get:
      operationId: voice_v3_questions_ordered_questions_retrieve
      description: |-
        Retrieve a list of questions for a given survey, ordered by the 'order' field.
        API url: `/api/questions/{survey_id}/ordered_questions`

        Parameters:
            request (Request): The request object used to make the API call.
            pk = survey_id (int): The primary key of the Survey instance to retrieve questions for.

        Returns:
            Response: A JSON response containing a list of serialized Question instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /voice/v3/responses/:
    get:
      operationId: voice_v3_responses_list
      description: Response ViewSet used internally to query data from database.
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response'
          description: ''
    post:
      operationId: voice_v3_responses_create
      description: Response ViewSet used internally to query data from database.
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Response'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Response'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Response'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
  /voice/v3/responses/{id}/:
    get:
      operationId: voice_v3_responses_retrieve
      description: Response ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
    put:
      operationId: voice_v3_responses_update
      description: Response ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Response'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Response'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Response'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
    patch:
      operationId: voice_v3_responses_partial_update
      description: Response ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResponse'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
    delete:
      operationId: voice_v3_responses_destroy
      description: Response ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /voice/v3/responses/submit-response/:
    post:
      operationId: voice_v3_responses_submit_response_create
      description: Response ViewSet used internally to query data from database.
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Response'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Response'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Response'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
  /voice/v3/schema/:
    get:
      operationId: voice_v3_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /voice/v3/surveys/:
    get:
      operationId: voice_v3_surveys_list
      description: Survey ViewSet used internally to query data from database.
      tags:
      - voice
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Survey'
          description: ''
    post:
      operationId: voice_v3_surveys_create
      description: Survey ViewSet used internally to query data from database.
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
  /voice/v3/surveys/{id}/:
    get:
      operationId: voice_v3_surveys_retrieve
      description: Survey ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
    put:
      operationId: voice_v3_surveys_update
      description: Survey ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
    patch:
      operationId: voice_v3_surveys_partial_update
      description: Survey ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSurvey'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
    delete:
      operationId: voice_v3_surveys_destroy
      description: Survey ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /voice/v3/surveys/{id}/questions/:
    get:
      operationId: voice_v3_surveys_questions_retrieve
      description: Survey ViewSet used internally to query data from database.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
  /voice/v3/surveys/create-survey/:
    post:
      operationId: voice_v3_surveys_create_survey_create
      description: Survey ViewSet used internally to query data from database.
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
  /voice/v3/surveys/my-surveys/:
    get:
      operationId: voice_v3_surveys_my_surveys_retrieve
      description: Survey ViewSet used internally to query data from database.
      tags:
      - voice
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
  /voice/v3/topics/:
    get:
      operationId: voice_v3_topics_list
      description: A ViewSet that returns the topics associated to a question
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
          description: ''
    post:
      operationId: voice_v3_topics_create
      description: A ViewSet that returns the topics associated to a question
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Topic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Topic'
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
  /voice/v3/topics/{id}/:
    get:
      operationId: voice_v3_topics_retrieve
      description: A ViewSet that returns the topics associated to a question
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dashboard topic.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
    put:
      operationId: voice_v3_topics_update
      description: A ViewSet that returns the topics associated to a question
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dashboard topic.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Topic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Topic'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
    patch:
      operationId: voice_v3_topics_partial_update
      description: A ViewSet that returns the topics associated to a question
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dashboard topic.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTopic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTopic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTopic'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
    delete:
      operationId: voice_v3_topics_destroy
      description: A ViewSet that returns the topics associated to a question
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dashboard topic.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /voice/v3/users/:
    get:
      operationId: voice_v3_users_list
      description: User ViewSet used internally to query data from database for all
        users.
      tags:
      - voice
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoiceUser'
          description: ''
    post:
      operationId: voice_v3_users_create
      description: User ViewSet used internally to query data from database for all
        users.
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VoiceUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VoiceUser'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceUser'
          description: ''
  /voice/v3/users/{id}/:
    get:
      operationId: voice_v3_users_retrieve
      description: User ViewSet used internally to query data from database for all
        users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceUser'
          description: ''
    put:
      operationId: voice_v3_users_update
      description: User ViewSet used internally to query data from database for all
        users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VoiceUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VoiceUser'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceUser'
          description: ''
    patch:
      operationId: voice_v3_users_partial_update
      description: User ViewSet used internally to query data from database for all
        users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - voice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVoiceUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVoiceUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVoiceUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceUser'
          description: ''
    delete:
      operationId: voice_v3_users_destroy
      description: User ViewSet used internally to query data from database for all
        users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - voice
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Answer:
      type: object
      description: |-
        Serialises 'response', 'question', 'created', 'updated', 'body', 'image'
        fields of the Answer model for the API.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Creation date
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Last edited
        body:
          type: string
          title: Answer Body
        image:
          type: string
          format: uri
          nullable: true
        question:
          type: string
          format: uri
        response:
          type: string
          format: uri
        mapview:
          type: string
          format: uri
          nullable: true
      required:
      - created
      - id
      - mapview
      - question
      - response
      - updated
      - url
    DashboardAnswer:
      type: object
      description: A serializer class for the Answer model that serializes the 'geom'
        field as a GeoJSON field.
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Creation date
        body:
          type: string
          title: Answer Body
        question:
          type: object
          additionalProperties: {}
          readOnly: true
        mapview:
          $ref: '#/components/schemas/DashboardMapView'
      required:
      - created
      - id
      - mapview
      - question
    DashboardMapView:
      type: object
      description: A serializer class for the MapView model used in the dashboard
        endpoint.
      properties:
        location:
          $ref: '#/components/schemas/Locations'
      required:
      - location
    GisFeatureCollectionEnum:
      type: string
      enum:
      - FeatureCollection
    GisFeatureEnum:
      type: string
      enum:
      - Feature
    JWT:
      type: object
      description: Serializer for JWT authentication.
      properties:
        access:
          type: string
        refresh:
          type: string
        user:
          $ref: '#/components/schemas/UserDetails'
      required:
      - access
      - refresh
      - user
    LineFeature:
      type: object
      description: |-
        Serialises 'id', 'geom', 'annotation' fields of the LineStringLocation model for the API.
        The 'geom' field is serialized as a GeoJSON field.
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureEnum'
        id:
          type: integer
          readOnly: true
        geometry:
          type: object
          properties:
            type:
              type: string
              enum:
              - LineString
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: number
                  format: float
                example:
                - 12.9721
                - 77.5933
                minItems: 2
                maxItems: 3
              example:
              - - 22.4707
                - 70.0577
              - - 12.9721
                - 77.5933
              minItems: 2
        properties:
          type: object
          properties:
            url:
              type: string
              format: uri
              readOnly: true
            annotation:
              type: string
              nullable: true
              maxLength: 150
            location:
              type: string
              format: uri
    LineFeatureList:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureCollectionEnum'
        features:
          type: array
          items:
            $ref: '#/components/schemas/LineFeature'
    LocationCollection:
      type: object
      description: |-
        Serialises 'name', 'question', 'answer', 'points', 'lines', 'polygons'
        fields of the Location model for the API.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
          maxLength: 300
        geojson:
          type: string
          readOnly: true
      required:
      - geojson
      - id
      - url
    Locations:
      type: object
      description: |-
        Serialises 'name', 'question', 'answer', 'points', 'lines', 'polygons'
        fields of the Location model for the API.
      properties:
        geojson:
          type: object
          additionalProperties: {}
          description: |-
            Returns a list of features (points, lines, polygons)
            associated with the location collection.
          readOnly: true
      required:
      - geojson
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    MapView:
      type: object
      description: |-
        Serialises 'name', 'map_service_url' and 'options'
        fields of the MapView model for the API.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          default: Delft
          title: Name of the MapView location
          maxLength: 150
        description:
          type: string
          nullable: true
          title: Description of the MapView
          maxLength: 200
        map_service_url:
          type: string
          maxLength: 150
        options:
          type: object
          additionalProperties: {}
          title: Map service specific options
        location:
          type: string
          format: uri
          nullable: true
      required:
      - id
      - url
    PaginatedDashboardAnswerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DashboardAnswer'
    PatchedAnswer:
      type: object
      description: |-
        Serialises 'response', 'question', 'created', 'updated', 'body', 'image'
        fields of the Answer model for the API.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Creation date
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Last edited
        body:
          type: string
          title: Answer Body
        image:
          type: string
          format: uri
          nullable: true
        question:
          type: string
          format: uri
        response:
          type: string
          format: uri
        mapview:
          type: string
          format: uri
          nullable: true
    PatchedLineFeature:
      type: object
      description: |-
        Serialises 'id', 'geom', 'annotation' fields of the LineStringLocation model for the API.
        The 'geom' field is serialized as a GeoJSON field.
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureEnum'
        id:
          type: integer
          readOnly: true
        geometry:
          type: object
          properties:
            type:
              type: string
              enum:
              - LineString
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: number
                  format: float
                example:
                - 12.9721
                - 77.5933
                minItems: 2
                maxItems: 3
              example:
              - - 22.4707
                - 70.0577
              - - 12.9721
                - 77.5933
              minItems: 2
        properties:
          type: object
          properties:
            url:
              type: string
              format: uri
              readOnly: true
            annotation:
              type: string
              nullable: true
              maxLength: 150
            location:
              type: string
              format: uri
    PatchedLocationCollection:
      type: object
      description: |-
        Serialises 'name', 'question', 'answer', 'points', 'lines', 'polygons'
        fields of the Location model for the API.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
          maxLength: 300
        geojson:
          type: string
          readOnly: true
    PatchedMapView:
      type: object
      description: |-
        Serialises 'name', 'map_service_url' and 'options'
        fields of the MapView model for the API.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          default: Delft
          title: Name of the MapView location
          maxLength: 150
        description:
          type: string
          nullable: true
          title: Description of the MapView
          maxLength: 200
        map_service_url:
          type: string
          maxLength: 150
        options:
          type: object
          additionalProperties: {}
          title: Map service specific options
        location:
          type: string
          format: uri
          nullable: true
    PatchedPointFeature:
      type: object
      description: |-
        GeoJson serializer for 'id', 'url', 'geom', 'name', 'annotation', 'location'
        fields of the PointLocation model for the API.
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureEnum'
        id:
          type: integer
          readOnly: true
        geometry:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
        properties:
          type: object
          properties:
            url:
              type: string
              format: uri
              readOnly: true
            annotation:
              type: string
              nullable: true
              maxLength: 150
            location:
              type: string
              format: uri
    PatchedPolygonFeature:
      type: object
      description: |-
        GeoJson serializer for 'id', 'geom', 'annotation', 'location' fields of the PolygonLocation model for the API.
        The 'geom' field is serialized as a GeoJSON field.
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureEnum'
        id:
          type: integer
          readOnly: true
        geometry:
          type: object
          properties:
            type:
              type: string
              enum:
              - Polygon
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: float
                  example:
                  - 12.9721
                  - 77.5933
                  minItems: 2
                  maxItems: 3
                example:
                - - 22.4707
                  - 70.0577
                - - 12.9721
                  - 77.5933
                minItems: 4
              example:
              - - - 0.0
                  - 0.0
                - - 0.0
                  - 50.0
                - - 50.0
                  - 50.0
                - - 50.0
                  - 0.0
                - - 0.0
                  - 0.0
        properties:
          type: object
          properties:
            url:
              type: string
              format: uri
              readOnly: true
            annotation:
              type: string
              nullable: true
              maxLength: 150
            location:
              type: string
              format: uri
    PatchedQuestion:
      type: object
      description: |-
        Serializes 'text', 'order', 'required', 'question_type', 'choices', 'is_geospatial', 'map_view'
        fields of the Question model for the API.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        text:
          type: string
          title: Question
        explanation:
          type: string
          nullable: true
          title: Explanation for the question
          maxLength: 200
        has_text_input:
          type: boolean
          default: true
          title: Show the input text field
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Order of where question is placed
        required:
          type: boolean
          default: true
          title: Question must be filled out
        question_type:
          allOf:
          - $ref: '#/components/schemas/QuestionTypeEnum'
          default: text
          title: Type of question
        choices:
          type: string
          nullable: true
          title: Choices for answers
        survey:
          type: string
          format: uri
          readOnly: true
        is_geospatial:
          type: boolean
          default: false
          title: If the question must be answered geospatially or not
        mapview:
          type: string
          format: uri
          nullable: true
        topics:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
    PatchedResponse:
      type: object
      description: |-
        Serializes 'response_id', 'url', 'survey', 'respondent', 'created', 'updated'
        fields of the Response model for the API.
      properties:
        response_id:
          type: string
          format: uuid
          readOnly: true
          title: Unique ID of interview
        url:
          type: string
          format: uri
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Date response was submitted
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Last edit
        survey:
          type: string
          format: uri
        respondent:
          type: string
          format: uri
          nullable: true
    PatchedSurvey:
      type: object
      description: |-
        Serialises 'id', 'name', 'description', 'submit_message', 'is_published', 'need_logged_user',
        'editable_answers', 'publish_date', 'expire_date', 'public_url', 'designer'
        fields of the Survey model for the API.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          title: Name of the survey
          maxLength: 150
        description:
          type: string
        submit_message:
          type: string
          default: Thank you for your participation!
          title: Message to be displayed after survey is submitted
        is_published:
          type: boolean
          default: false
          title: Survey is visible and accessible to users
        need_logged_user:
          type: boolean
          default: false
          title: Only authenticated users have access to this survey
        editable_answers:
          type: boolean
          default: true
          title: Answers can be edited after submission
        publish_date:
          type: string
          format: date-time
          title: Date that survey was made available
        expire_date:
          type: string
          format: date-time
          title: Expiry date of survey
        public_url:
          type: string
          maxLength: 255
        designer:
          type: string
          format: uri
          readOnly: true
    PatchedTopic:
      type: object
      description: A serializer class for the DashboardTopic model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Topic name
          maxLength: 150
    PatchedUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    PatchedVoiceUser:
      type: object
      description: |-
        Serialises 'id', 'username', 'first_name', 'last_name', 'email'
        fields of the User model for the API.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
    PointFeature:
      type: object
      description: |-
        GeoJson serializer for 'id', 'url', 'geom', 'name', 'annotation', 'location'
        fields of the PointLocation model for the API.
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureEnum'
        id:
          type: integer
          readOnly: true
        geometry:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
        properties:
          type: object
          properties:
            url:
              type: string
              format: uri
              readOnly: true
            annotation:
              type: string
              nullable: true
              maxLength: 150
            location:
              type: string
              format: uri
    PointFeatureList:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureCollectionEnum'
        features:
          type: array
          items:
            $ref: '#/components/schemas/PointFeature'
    PolygonFeature:
      type: object
      description: |-
        GeoJson serializer for 'id', 'geom', 'annotation', 'location' fields of the PolygonLocation model for the API.
        The 'geom' field is serialized as a GeoJSON field.
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureEnum'
        id:
          type: integer
          readOnly: true
        geometry:
          type: object
          properties:
            type:
              type: string
              enum:
              - Polygon
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: float
                  example:
                  - 12.9721
                  - 77.5933
                  minItems: 2
                  maxItems: 3
                example:
                - - 22.4707
                  - 70.0577
                - - 12.9721
                  - 77.5933
                minItems: 4
              example:
              - - - 0.0
                  - 0.0
                - - 0.0
                  - 50.0
                - - 50.0
                  - 50.0
                - - 50.0
                  - 0.0
                - - 0.0
                  - 0.0
        properties:
          type: object
          properties:
            url:
              type: string
              format: uri
              readOnly: true
            annotation:
              type: string
              nullable: true
              maxLength: 150
            location:
              type: string
              format: uri
    PolygonFeatureList:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureCollectionEnum'
        features:
          type: array
          items:
            $ref: '#/components/schemas/PolygonFeature'
    Question:
      type: object
      description: |-
        Serializes 'text', 'order', 'required', 'question_type', 'choices', 'is_geospatial', 'map_view'
        fields of the Question model for the API.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        text:
          type: string
          title: Question
        explanation:
          type: string
          nullable: true
          title: Explanation for the question
          maxLength: 200
        has_text_input:
          type: boolean
          default: true
          title: Show the input text field
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Order of where question is placed
        required:
          type: boolean
          default: true
          title: Question must be filled out
        question_type:
          allOf:
          - $ref: '#/components/schemas/QuestionTypeEnum'
          default: text
          title: Type of question
        choices:
          type: string
          nullable: true
          title: Choices for answers
        survey:
          type: string
          format: uri
          readOnly: true
        is_geospatial:
          type: boolean
          default: false
          title: If the question must be answered geospatially or not
        mapview:
          type: string
          format: uri
          nullable: true
        topics:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
      required:
      - id
      - order
      - survey
      - text
      - topics
      - url
    QuestionTypeEnum:
      enum:
      - text
      - short-text
      - radio
      - select
      - select-multiple
      - select_image
      - integer
      - float
      - date
      - image-upload
      type: string
      description: |-
        * `text` - text (multiple line)
        * `short-text` - short text (one line)
        * `radio` - radio
        * `select` - select
        * `select-multiple` - Select Multiple
        * `select_image` - Select Image
        * `integer` - integer
        * `float` - float
        * `date` - date
        * `image-upload` - Image Upload
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - password1
      - password2
    Response:
      type: object
      description: |-
        Serializes 'response_id', 'url', 'survey', 'respondent', 'created', 'updated'
        fields of the Response model for the API.
      properties:
        response_id:
          type: string
          format: uuid
          readOnly: true
          title: Unique ID of interview
        url:
          type: string
          format: uri
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Date response was submitted
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Last edit
        survey:
          type: string
          format: uri
        respondent:
          type: string
          format: uri
          nullable: true
      required:
      - created
      - respondent
      - response_id
      - survey
      - updated
      - url
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    SocialLogin:
      type: object
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
    Survey:
      type: object
      description: |-
        Serialises 'id', 'name', 'description', 'submit_message', 'is_published', 'need_logged_user',
        'editable_answers', 'publish_date', 'expire_date', 'public_url', 'designer'
        fields of the Survey model for the API.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          title: Name of the survey
          maxLength: 150
        description:
          type: string
        submit_message:
          type: string
          default: Thank you for your participation!
          title: Message to be displayed after survey is submitted
        is_published:
          type: boolean
          default: false
          title: Survey is visible and accessible to users
        need_logged_user:
          type: boolean
          default: false
          title: Only authenticated users have access to this survey
        editable_answers:
          type: boolean
          default: true
          title: Answers can be edited after submission
        publish_date:
          type: string
          format: date-time
          title: Date that survey was made available
        expire_date:
          type: string
          format: date-time
          title: Expiry date of survey
        public_url:
          type: string
          maxLength: 255
        designer:
          type: string
          format: uri
          readOnly: true
      required:
      - designer
      - expire_date
      - id
      - name
      - publish_date
      - url
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    Topic:
      type: object
      description: A serializer class for the DashboardTopic model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Topic name
          maxLength: 150
      required:
      - id
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
      - username
    VoiceUser:
      type: object
      description: |-
        Serialises 'id', 'username', 'first_name', 'last_name', 'email'
        fields of the User model for the API.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
externalDocs:
  description: User Authentication (allauth)
  url: /_allauth/openapi.html
