name: civo

services:

  postgis_db:
    image: postgis/postgis:16-3.4-alpine
    container_name: postgis-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DATABASE}"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - postgis_data:/var/lib/postgresql/data
      - ./init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
      # TODO: there is a problem with the init-user-db.sh script, error creating superuser, citizen already exists
    environment:
      - POSTGRES_PASSWORD=/run/secrets/postgres_password
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DATABASE}
    restart: unless-stopped
    secrets:
      - postgres_password
    ports:
      - 5432:5432
    networks:
      - civo_network

  djangoapi:
    build: 
      context: ./citizenvoice
    command: >
      sh -c "python manage.py migrate &&
      python manage.py loaddata civilian-db.json &&
      python manage.py runserver 0.0.0.0:8000"
    container_name: django-api
    environment:
      - SECRET_KEY=/run/secrets/django_token
      - DATABASE_ENGINE=${DJANGO_DB_ENGINE}
      - POSTGRES_DBASE=${DATABASE}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PWD=/run/secrets/postgres_password
      - POSTGRES_HOST=postgis_db
      - POSTGRES_PORT=${DB_PORT}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
    volumes:
      - ./citizenvoice:/citizenvoice
    ports:
      - 8000:8000
    secrets:
      - django_token
      - postgres_password
    depends_on:
      postgis_db:
        condition: service_healthy
        restart: true
    networks:
      - civo_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 10s

  frontend:
    build: 
      context: ./frontend
      # args:
      #   - API_URL=http://django_api:8000/api/v2
    container_name: frontend
    environment:
      - API_PARTY_CMS_URL=http://djangoapi:8000/api/v2
      - NODE_OPTIONS="--max-old-space-size=5120" # increases RAM for Node
    ports: 
      - 3000:3000
    volumes:
      - ./frontend:/frontend
    depends_on:
      djangoapi:
        condition: service_healthy  
    restart: always
    networks:
      - civo_network

  # nginx: TODO: there is a problem with this
  #   image: nginx:latest
  #   container_name: nginx-proxy
  #   ports:
  #     - "80:80"  # Expose Nginx on port 80
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Read-only mounting of config
  #   depends_on:
  #     frontend:
  #       condition: service_started
  #     djangoapi:
  #       condition: service_healthy
  #   networks:
  #     - civo_network

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  django_token:
    file: ./secrets/django_token.txt
volumes:
  postgis_data:

networks:
  civo_network:
    driver: bridge

# CONTINUE HERE:
# runtime config was set and works in dev mode
# docker shows this error:
# frontend             | <--- Last few GCs --->
# frontend             | 
# frontend             | [28:0xffff990b0000]   133681 ms: Mark-Compact 4039.1 (4135.8) -> 4027.6 (4140.3) MB, pooled: 0 MB, 6118.44 / 0.32 ms  (average mu = 0.114, current mu = 0.019) allocation failure; scavenge might not succeed
# frontend             | [28:0xffff990b0000]   138292 ms: Mark-Compact 4044.4 (4141.5) -> 4032.6 (4145.3) MB, pooled: 0 MB, 4505.56 / 0.05 ms  (average mu = 0.077, current mu = 0.023) allocation failure; scavenge might not succeed
# frontend             | 
# frontend             | 
# frontend             | <--- JS stacktrace --->
# frontend             | 
# frontend             | FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
# frontend             | ----- Native stack trace -----
# frontend             | 
# frontend             | error Command failed with signal "SIGABRT".
# frontend             | info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.